def findWaitingTime(processes, n, wt):
    wt[0] = 0
    for i in range(1, n):
        wt[i] = processes[i - 1][1] + wt[i - 1]

def findTurnAroundTime(processes, n, wt, tat):
    for i in range(n):
        tat[i] = processes[i][1] + wt[i]

def findavgTime(processes, n):
    wt = [0] * n
    tat = [0] * n
    findWaitingTime(processes, n, wt)
    findTurnAroundTime(processes, n, wt, tat)
    print("\nProcesses  Burst Time  Waiting Time  Turn-Around Time")
    total_wt = 0
    total_tat = 0
    for i in range(n):
        total_wt += wt[i]
        total_tat += tat[i]
        print(f"{processes[i][0]}\t{processes[i][1]}\t{wt[i]}\t{tat[i]}")
    print("\nAverage waiting time =", (total_wt / n))
    print("Average turn around time =", (total_tat / n))

def priorityScheduling(proc, n):
    proc = sorted(proc, key=lambda proc: proc[2], reverse=True)
    print("Order in which processes get executed:")
    for i in proc:
        print(i[0], end=" ")
    findavgTime(proc, n)

if __name__ == "__main__":
    n = int(input("Enter number of processes: "))
    proc = []
    for i in range(n):
        pid = i + 1
        bt = int(input(f"Enter Burst Time for Process {pid}: "))
        priority = int(input(f"Enter Priority for Process {pid}: "))
        proc.append([pid, bt, priority])
    priorityScheduling(proc, n)
